version: '3.8'

services:
  # 1. Database Services
  # Each microservice has its own dedicated database.

  skill-db:
    image: 'mysql:8.0'
    container_name: skill-db
    ports:
      - "3310:3306" # <-- PORT CHANGED HERE
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=skill_db
    volumes:
      - skill-db-data:/var/lib/mysql
    networks:
      - enaa-network

  user-db:
    image: 'mysql:8.0'
    container_name: user-db
    ports:
      - "3311:3306" # <-- PORT CHANGED HERE
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=user_db
    volumes:
      - user-db-data:/var/lib/mysql
    networks:
      - enaa-network

  validation-db:
    image: 'mysql:8.0'
    container_name: validation-db
    ports:
      - "3312:3306" # <-- PORT CHANGED HERE
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=validation_db
    volumes:
      - validation-db-data:/var/lib/mysql
    networks:
      - enaa-network

  brief-db:
    image: 'mysql:8.0'
    container_name: brief-db
    ports:
      - "3313:3306" # <-- PORT CHANGED HERE
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=brief_db
    volumes:
      - brief-db-data:/var/lib/mysql
    networks:
      - enaa-network

  # 2. Backend Microservices
  # Each service connects to its own database.

  skill-service:
    build:
      context: ./skill-service
    container_name: skill-service
    ports:
      - "8083:8083"
    depends_on:
      - skill-db
    environment:
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:mysql://skill-db:3306/skill_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    networks:
      - enaa-network

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8082:8082"
    depends_on:
      - user-db
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:mysql://user-db:3306/user_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    networks:
      - enaa-network

  validation-service:
    build:
      context: ./validation-service
    container_name: validation-service
    ports:
      - "8084:8084"
    depends_on:
      - validation-db
    environment:
      - SERVER_PORT=8084
      - SPRING_DATASOURCE_URL=jdbc:mysql://validation-db:3306/validation_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    networks:
      - enaa-network

  brief-service:
    build:
      context: ./brief-service
    container_name: brief-service
    ports:
      - "8081:8081"
    depends_on:
      - brief-db
      - skill-service
      - user-service
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:mysql://brief-db:3306/brief_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SKILL_SERVICE_URL=http://skill-service:8083
      - USER_SERVICE_URL=http://user-service:8082
    networks:
      - enaa-network

  # 3. API Gateway
  # The single entry point for the entire application.
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080" # This is the main port to access the application
    depends_on:
      - brief-service
      - skill-service
      - user-service
      - validation-service
    environment:
      # URLs the gateway needs to route requests to the correct microservice
      - BRIEF_SERVICE_URL=http://brief-service:8081
      - SKILL_SERVICE_URL=http://skill-service:8083
      - USER_SERVICE_URL=http://user-service:8082
      - VALIDATION_SERVICE_URL=http://validation-service:8084
    networks:
      - enaa-network

# Named volumes to persist data for each database
volumes:
  skill-db-data:
  user-db-data:
  validation-db-data:
  brief-db-data:

# A dedicated network for all our services to communicate securely
networks:
  enaa-network:
    driver: bridge
